/*!
    Tesco
    Common JavaScript for Tesco sites

    Revision properties generated by SVN keywords
    ---------------------------------------------
    $Rev:: 1388                         $:  Revision of last commit
    $Author:: bhansalir                 $:  Author of last commit
    $Date:: 2011-02-09 10:10:44 +0000 (#$:  Date of last commit

    JSDoc notation

    @author LBi - http://www.lbi.co.uk
    @requires jQuery Core 1.4+ - http://www.jquery.com/
*/

/**
 * @namespace Namespace container for all common objects created for the tesco namespace
 * @memberOf tesco
 */
var daysToEnable = new Array();
var chargesPerDate = new Array();
var productCompareDataSource;

// Disable caching of AJAX responses
$.ajaxSetup({
    cache: false
});	

(function() {

    var TESCO = {

        /**
         * Extends the Tesco object with the specified object
         * @function
         * @memberOf tesco
         * @name {String} The namespace the object should be dropped into
         * @obj {Object} The object
         */
        extend: function( name, obj ) {

            if (this[name] === undefined) {
                this[name] = obj;
            }

        }

    };

    window.TESCO = TESCO;

})();


TESCO.extend( 'Common', {

    EXPANDED_CLASS: 'expanded',

    /**
     * A default position for the mapviewer to be initialised to
     * NOTE - The Bing maps api will note be loaded on every page so this should remain
     * an object literal specifying a lat/lon pair
     */
    MAPVIEWER_START_POSITION: { 'lat' : 51.49731, 'lon' :  -0.12772 },
    
    /**
     * The Bing Maps API key
     * This is required on initialisation of a map 
     */
    MAP_KEY: 'AkmcDNM25arbBeR_NNXIRXQv1rA1c4qw8VQ3ktUcuV7Nl4v12hQ4EyLFrv6SjOZx',

    /**
     * The default data source to be used for searching
     * NOTE - This will need to be changed to Tesco's client data source when known
     */
    STOREFINDER_SEARCH_DATASOURCE: 'mm.poi.global.general.atm',

    /**
     * The default number of records to be returned by the search requester
     */
    STOREFINDER_SEARCH_COUNT: 5,

    /**
     * Boolean value to specify whether or not results should
     * be ordered by driving distance rather than the great circle distance.
     * Not enabling this by default as it will impact the performance of the search.
     */
    STOREFINDER_SEARCH_BY_DRIVING_DISTANCE: false,

    /**
    * Public function to initialise some common function
    * @function
    * @memberOf tesco.common
    */
    init: function() {
		// Init the cookie notification.
			this.formFocus();
			this.accessibilityOptions();
			this.modalDialogueBox();
			this.nonModalDialogue();						
            this.pricepromiseTooltip();
			this.confirmCardDeleteTooltip();
			this.showMoreDetails();
			this.tabContent();			
			this.scene7HasJS();
			this.showGlowErrs();
			this.hideSearchFacets();
			this.ellipseProductNames();			
			this.displayInlineContent();
			this.bindPasswordIndicator();			
				
            var productTitle = $('#product-title h1');
            if(productTitle.length!=0){
            	document.title=productTitle.text();
            }
			// apply dynamic price total calculation if delivery-options exist
			if($('.delivery-options').length){
				this.deliveryChargeBehaviour();
			}
			if($('#printSec').hasClass('printLink_noscript')){
				$('#printSec').addClass('product-summary-tools');
			}			
			if($('textarea[maxlength]').length){
				this.characterLimiter();
			}
			
			if($('div.more-product-options').length){
				$('div.more-product-options').each(function(n){
					var objHeight = $(this).closest('tr.item-summary').find('div.items-delivery-options-container').height();
									
					if(objHeight > 70){
						$(this).closest('tr.item-summary').find('div.items-details-container').css('height', objHeight);
					}
				});
				
				/**
				  imitating the feature of disabled button. The button does nothing when it has "disabled" class
				*/
				var atb = $("div.more-product-options input.button");
				atb.click(function (event) {					
					if ($(this).hasClass("disabled")) {					
						var p = $(this).closest(".more-option-dialogue");
						p.find("p.warningMessage").show();
						return false;
					}
				});			
			}						
						
			$('select.confirm-age').change(function() { 
		    	  var day = $('#frm-date').val();
		    	  var month = $('#frm-month').val();
		    	  var year = $('#frm-year').val();
		    	  var date = new Date();
		    	  var dates = '31';
		    	  var selDate = $("#frm-date").find(':selected').val();
		    		 
		    	  if(month == "02") {
	    			  if(year != '' && year % 4 == 0) {
	    				 dates='29'
			    	  } 
	    			  else {   dates = '28';}
		    	  }		    	  
		    	  else if(month == "01" || month == "03" || month == "05" || month == "07" || month == "08" || month == "10" || month == "12"){
		    		  dates = '31';
		    	  }
		    	  else{ 
		    		  dates = '30';  
		    	  }
		    	  
		    	  $('#frm-date').empty();
		    	  TESCO.Common.generateDates(dates);
		    	  $("#frm-date").val(parseInt(selDate));
			});
			// Tag changes between pages 
			$('.address-list .btn-action').each(function(i, e) {
				var me = $(e);
				me.tooltip({
					autohide: true,
					initiate: 'click',
					tooltip: $('#tooltip-' + me.attr('id')),
					beforeShow: function(){
						$('.tooltip-pending-orders').hide();
						$('.tooltip-delete-address').hide();
					},
					onInitialise: function(api){						
						api.tooltip.find('.btn-cancel').click(function(){
							api.tooltip.hide();
							return false;
						});
					}
				});
			});
            $("div.section-blinkbox .blinkbox p span.help").click(function () {
				$(".section-blinkbox .blinkbox p span.help").toggle();
				$(".blinkbox-content").slideToggle("fast");
				$(".section-blinkbox .blinkbox p.blinkbox-header").toggleClass("blinkBorder");
			}); 
			// Don't allow the user to submit the form if 
			// the user hasn't entered any keywords.
			$('#search input.search-button').click(function(){
				var input = $('#search-input');
				if (input.val() == '' ||input.val() == input.attr('placeholder')) {
					input.focus();
					return false;
				}
			});
			
			$("#seller-directory-list a").click(function (event) {
				event.preventDefault();
				var sellerId = $(this).attr('href');
				if($(sellerId).offset() !="" && $(sellerId).offset() !=null){
					$('html,body').animate({scrollTop:$(sellerId).offset().top}, 750);
				}
			});
			
		
    },
    
    // Added seperate function for Ellipse to performance analyse easier 
    ellipseProductNames: function() {    			
		// "Items you might like" + "Others bought these alternatives" + "Customer who bought this also bought"
		$('div.product-tile span.product-tile-prd-name').ellipsis(46);		
		$('#main-content table.delivery-group span.product-tile-prd-name').ellipsis('45');
		$('#main-content div.delivery-number td.items span.order-product-name').ellipsis('35');
		
		// Ellipsis the product name and variant value is variants in active
	
		if (TESCO.PLP) {
			//Declared to reduce scope lookup for each call
			var oTescoUtils = TESCO.Utils;
			//"Items you have recently viewed"
			oTescoUtils.formatVariantStyleNameInPopupBasket($('#recently-viewed a.prod-img div.rvProductTitleHolder h3'), 44);
			oTescoUtils.formatVariantStyleNameInPopupBasket($('#main-content div.items-summary-details h2 a'), 46);
			//Basket attachment items
			oTescoUtils.formatVariantStyleNameInPopupBasket($('div.secondary-content div.primary-info ul.basket-items a'), 45);			
			oTescoUtils.formatVariantStyleNameInPopupBasket($('#main-content div.payment-summary div.primary-info ul.basket-items a'), 45);			
		}
		else {			
			$('#main-content div.items-summary-details h2 a').ellipsis('48');
			// "Items you have recently viewed"
			$("#recently-viewed a.prod-img div.rvProductTitleHolder h3").ellipsis(44);
			// Basket attachment items
			$('div.secondary-content div.primary-info ul.basket-items a').ellipsis(45);
			$('#main-content div.payment-summary div.primary-info ul.basket-items a').ellipsis('45');
		}	
		        
		//$('.product-list li.product div.product-details div.product-name h3 a').ellipsis('45');    	
    },
    /**
     * Display the inline content either from cms or external url
     * @function
     * @memberOf tesco.common
     */    
     displayInlineContent: function () {
    	 if($("#inline-content").length != 0) {
    		 var url = $("div#inlineContentURL").html();
    		 var urlType = $("div#inlineContentURLType").html();
    		 if(urlType === "CMS") {
	    		 $('div#inhouse-data').load(url, function() {
	    			 
	    		 }); 	
    		 } else {  
	    		 $.getScript(url, function(data, textStatus, jqxhr) {

	    		 });
    		 }
    	 }
     },
     /**
      * Display the content for the special offer fly out
      * @function
      * @memberOf tesco.common
      */  
    
    /**
     * Enable cross browser form focus event, and apply styles.
     * @function
     * @memberOf tesco.common
     */    
    formFocus: function(){

		$("input[type='number'],input[type='password'],input[type='text'],textarea").focus(function(){
			$(this).addClass('focus');
		}).blur(function(){
			$(this).removeClass('focus');
		});

    },
    checkUserAgent: function() {
    	//All iPads are exempt. 
    	if( /Android|webOS|iPhone|iPod|BlackBerry|Windows Phone|windows ce|series60|Symbian|palm|Zune/i.test(navigator.userAgent) ){
    		//Detect iPhone 2+
    		if(/iphone\sOS\s[2-9]{1}/i.test(navigator.userAgent)) {
    			return false;
    		}
    		//Detect Android 3+
    		if(/android\s[3-9]{1}/i.test(navigator.userAgent)) {
    			return false;
    		}    		
    		//All other devices are classed as mobile.
    		return true;
    	}
    	else {
    		return false;
    	}
    },
    bindBasketButton: function(){
    	$('body').delegate('#continueCheckout .basket-large','click', function(){
    		TESCO.Common.checkoutRedirectionCheck();
    	});
    },
    lazyLoadJS: function(sJSFile) {
      var d = $.Deferred();
      $.getScript(sJSFile, function() {               
            d.resolve(true);
      });         
      return d.promise();          
	},
    //added for PWD strength indicator  in Change password page
    bindPasswordIndicator: function(){
    	if ($('.pwdIndText').length){    		
    		this.lazyLoadJS(globalSecureStaticJSPath+'lib/password.strength.js').done(function(resp) {   //changed
				var messages = ["Very weak", "Weak", "Medium", "Strong", "Very strong"];
				$('.pwdStrengthDiv').show();
				
				if($('.pwdIndText').val() != ''){
					var passStrngthVal = zxcvbn($('.pwdIndText').val());
					$('#passStrengthIndicator').text(messages[passStrngthVal.score]);
					$('#passStrengthIndicator').attr('class','state-'+[passStrngthVal.score]);
				}
			
				$('body').delegate('.pwdIndText', 'keyup mouseup', function(e){
					var txtVal = $(this).val();
				
					var passStrngthVal = zxcvbn(txtVal);
					$('#passStrengthIndicator').text(messages[passStrngthVal.score]);
					$('#passStrengthIndicator').attr('class','state-'+[passStrngthVal.score]);
				});
			});           		
    	}	
    },
    nonJSScheduleDelivery: function(){
    	if($('.schedule-delivery-nonjs').length){
    		$('.schedule-delivery-nonjs').hide();
    		$('.schedule-delivery-js').show();
    	}
    },
    checkoutRedirectionCheck: function(){
    	var is_mobile = this.checkUserAgent();
		if($("#jsEnableCheck").length>0 && !is_mobile){
            $("#jsEnableCheck").attr("value","true");
		}
	},    
        
    verticalAlign: function(obj){
    	return obj.each(function(i){
            if(!($(this).children().hasClass('valign-wrap'))){
	    		$(this).children().wrapAll('<div class="valign-wrap" style="position:relative;"></div>');
	            var div = $(this).children('div.valign-wrap');
	            var currentvwHeight = $(this).innerHeight();
	            var currentvwDivHeight = div.height();
	            var newvwDivHeight = (currentvwHeight - currentvwDivHeight) / 2;
	            div.css('top', newvwDivHeight);
            }
    	});
    },
     
    setGridview: function($newProductTiles){        
    	var gridItems; 
    	if ($newProductTiles !== undefined) {
    		gridItems = $newProductTiles; 
    	}
    	else {
    		gridItems = $('#product-tile-container li.product');    		
    	}    	
        var $elemCache = $(gridItems).children('div.product-details').children('div.product-name');        
        // Ellipsis product name
		//$elemCache.find('h3 a').ellipsis('54');		
		TESCO.Utils.formatVariantStyleNameInPopupBasket($elemCache.find('h3 a'), 54);

		// Ellipsis Book author or artist
		$elemCache.children('p').ellipsis('28');
		 
        var oProps = this.getGridViewProperties();		
		this.formatGridElements(gridItems, 4, oProps);
    },
    getGridViewProperties: function() {
    	var oProps = [];        
		oProps.push(["div.product-name", 84, 0]);
		oProps.push(["p.release-format", 0, 5, true, true]);
		oProps.push([".product-rating-container", 0, 5, true, true]);
		oProps.push(["p.sold-by", 0, 5, true, true]);
		oProps.push(["div.product-details-core", 200, 5, false, false, true]);
		oProps.push(["p.prices-from", 0, 0, true, true]);
		oProps.push(["div.old-price-container", 0, 0, true, true]);
		oProps.push(["p.from-text", 0, 0, true, true]);
		oProps.push(["p.current-price", 0, 5, true, true]);
		oProps.push(["div.link-save-button", 100, 0, true]);
		oProps.push(["div.product-availability-offers", 200, 5]);			
		oProps.push(["div.compare-section", 100, 0, true, true]);		
		oProps.push(["div.button-container", 0, 5, true, true]);
		oProps.push(["div.add-to-list", 0, 0, true, true]);
		return oProps; 
    },
    formatGridElements: function(newProductElements, gridsPerRow, oProps) {    	    	
    	var rows = Math.ceil(newProductElements.length/gridsPerRow);    
    	for(var i = 1; i < rows+1; i++) {    		
    		(function(a) {
    			setTimeout(function(i) {
    				TESCO.Common.performRowCalculations(newProductElements, gridsPerRow, oProps, a);
    			}, 25);
    		})(i);
    	}
	},
	performRowCalculations: function(newProductElements, gridsPerRow, oProps, i) {
		var bottomMargin = '0px';		
		var tallestEle = 0;
		var objTemp = [];
		var objElem = [];
		if(i==1) {    	        
			var rowItems = newProductElements.filter(":lt("+i*gridsPerRow+")");
		} 
		else {    	        
			var rowItems = newProductElements.filter(":lt("+i*gridsPerRow+")").filter(":gt("+((i*gridsPerRow)-(gridsPerRow+1))+")");
		}    		
		
		var thisHeight = 0;
		var $elemCache = $(rowItems).children('div.product-details');
		for(var j = 0; j < oProps.length; j++) {
			
			tallestEle = 0;
			thisHeight = 0;					
			if (oProps[j][4] == true) {
				var _lElemCache = $(rowItems).find(oProps[j][0]); 
				_lElemCache.removeClass('height-param');
				objElem[j] = _lElemCache.get();
			}
			else {
				if (oProps[j][3] == true) {
					var _lElemCache = $elemCache.children('div.product-availability-offers').children(oProps[j][0]); 
					_lElemCache.removeClass('height-param');
					objElem[j] = _lElemCache.get();
				}
				else {
					var _lElemCache = $elemCache.children(oProps[j][0])						
					_lElemCache.removeClass('height-param');
					objElem[j] = _lElemCache.get();
				}
			}
			if (oProps[j][5] !== true) {
				var x1 = $(objElem[j]).length;					
				for(var z = 0; z < x1; z++) {
					// Introduced for re-calculating rows, used for Variants PLP
					if (oProps[j][6] === true) {
						objElem[j][z].style.height = 'auto';
					}
					thisHeight = objElem[j][z].offsetHeight;
					if(thisHeight > tallestEle) {
						tallestEle = thisHeight;
						//Fix for IE7 as it is returning lesser height than actual
												
					}
					objTemp[j] = tallestEle;
				}
			}		
		}    	    	

		for(var j = 0; j < oProps.length; j++) {
			if (oProps[j][5] !== true) {
				bottomMargin = '0px';
				if(oProps[j][1] && objTemp[j] > oProps[j][1]) { objTemp[j] = oProps[j][1]; }
				if(oProps[j][2] != '0') { bottomMargin = oProps[j][2] + 'px'; }
				var x1 = objElem[j].length;
				for(var z = 0; z < x1; z++) {
					objElem[j][z].style.height = objTemp[j] + "px";
					objElem[j][z].style.marginBottom = bottomMargin;
				}
			}
		}
		objTemp.length = 0;
	
	}, 
   
	setCarouselView: function(){
	       
	      $('div.shopby-layout').not('.carousel').each(function(){
		  var gridClass = $(this).parents('div[class=*grid]').attr('class');
		  if(gridClass.indexOf('grid-') != -1){
		      var sbstr = gridClass.indexOf('grid-') + 5;
		      var shopByCols = eval(gridClass.substring(sbstr, sbstr+1));
		      TESCO.Common.setElementHeight($(this).find("h3"), shopByCols,100, 0);
		  }
	      });
	      
	      this.setElementHeight($(".shopby-layout.carousel h3"), 100,100, 0);
	      this.verticalAlign($(".shopby-layout h3"));
	      
	      var $meshLayoutGrid = $(".layout-c .secondary-content .product-gallery-layout-mesh");
	      $meshLayoutGrid.each(function(index){
		    TESCO.Common.setElementHeight($(this).find(".product-tile-price"), 2);
		    $(this).find("ul li a span.product-tile-prd-name").ellipsis(60);
		    $(this).find("ul li .product-tile-author").ellipsis(15);
		    TESCO.Common.setElementHeight($(this).find('ul li a span.product-tile-prd-name'), 2);
		    TESCO.Common.setElementHeight($(this).find('ul li .product-tile-author'), 2);
	      });
	      
	      //Recommended Block
	      var $recommendedBlock= $("#infinite");
	      $recommendedBlock.each(function(index){
	      $(this).find("ul li a span.product-tile-prd-name").ellipsis(44);
	      $(this).find("ul li .product-tile-author").ellipsis(15);
	      TESCO.Common.setElementHeight($(this).find(".product-tile-price"), 1000);
	      TESCO.Common.setElementHeight($(this).find(".user-start-review"), 1000);
	      TESCO.Common.setElementHeight($(this).find('ul li a span.product-tile-prd-name'), 1000);
	      TESCO.Common.setElementHeight($(this).find('ul li .product-tile-author'), 1000);
	       });
	    
	    //Carousel Block  
	    var $carouselBlock= $(".ui-carousel-clip");
	    $carouselBlock.each(function(index){
	  	$(this).find("ul li a span.product-tile-prd-name").ellipsis(44);
	  	$(this).find("ul li .product-tile-author").ellipsis(15);
	  	TESCO.Common.setElementHeight($(this).find(".product-tile-price"), 1000);
	  	TESCO.Common.setElementHeight($(this).find(".user-start-review"), 1000);
	  	TESCO.Common.setElementHeight($(this).find('ul li a span.product-tile-prd-name'), 1000);
	  	TESCO.Common.setElementHeight($(this).find('ul li .product-tile-author'), 1000);
	              
	   });
	 },
    setProductBlockView: function(){
   	 	if($('div.product-gallery-layout-grid.resize-tile.carousel').length > 0){
	   	 	$('div.product-gallery-layout-grid.resize-tile.carousel').each(function(){
		   	 	$(this).find('li div.product-tile').removeClass('height-param');
		   	 	
		   	 	TESCO.Common.setElementHeight($(this).find('li div.product-tile span.product-tile-prd-name'), 1000);
		   	 	TESCO.Common.setElementHeight($(this).find('li div.product-tile p.release-format'), 1000);
		  	    TESCO.Common.setElementHeight($(this).find('li div.product-tile div.user-start-review'), 1000);
		  	    TESCO.Common.setElementHeight($(this).find('li div.product-tile div.product-tile-price'), 1000);
			    TESCO.Common.setElementHeight($(this).find('li div.product-tile p.product-tile-author'), 1000);
		   	});
   	 	}
    },
    setProductTileView: function(){
   	 	if($('div.product-gallery-layout-grid.resize-tile:not(.carousel)').length > 0){
	   	 	$('div.product-gallery-layout-grid:not(.carousel)').each(function(){
		   	 	var gridClass = $(this).parents('div[class=*grid]').attr('class');
		   	 	if(gridClass.indexOf('grid-') != -1){
		  	     var sbstr = gridClass.indexOf('grid-') + 5;
		  	      var tileCols = eval(gridClass.substring(sbstr, sbstr+1));
		  	       $(this).find('li div.product-tile').removeClass('height-param');
		  	      TESCO.Common.setElementHeight($(this).find('li div.product-tile span.product-tile-prd-name'), tileCols);
		  	      TESCO.Common.setElementHeight($(this).find('li div.product-tile p.release-format'), tileCols);
		  	      TESCO.Common.setElementHeight($(this).find('li div.product-tile div.user-start-review'), tileCols);
		  	      TESCO.Common.setElementHeight($(this).find('li div.product-tile div.product-tile-price'), tileCols);
			      TESCO.Common.setElementHeight($(this).find('li div.product-tile p.product-tile-author'), tileCols);
		  	    }
	   	 	});
   	 	}
    },
    setSaveForLaterGrid: function() {
    	var $eC = $('div.product-gallery-layout-sfl');
    	if ($eC.length) {
    		var oProps = this.getGridViewProperties();    		
    		var gridItems = $eC.find('ul.ui-carousel-slide li');
    		this.formatGridElements(gridItems, 99, oProps);    		
    		
    		/*
    		$eC.find('ul.ui-carousel-slide li').each(function(i, e) {
    			var $eC2 = $(e);
    			TESCO.Common.setElementHeight($eC2.find('div.product-name'), 99);
    			
    		});
    		*/    		
    	}
    },
    setElementHeight: function (gridElement, gridsPerRow, customHeight, customMargin) {
    	gridElement.removeClass('height-param');
    	var tallestEle = 0;
		var bottomMargin = '5px';
    	var rows = Math.ceil(gridElement.length/gridsPerRow);
    	
    	for(var i = 1;i<rows+1;i++) {
    		tallestEle = 0;    		
    		if(i==1) {    	        
    	       var rowItems = gridElement.filter(":lt("+i*gridsPerRow+")");
    	    } else {    	        
    	        var rowItems = gridElement.filter(":lt("+i*gridsPerRow+")").filter(":gt("+((i*gridsPerRow)-(gridsPerRow+1))+")");
    	    }
    	    
    	    for(var x = 0; x < rowItems.length; x++) {
    	    	var thisHeight = rowItems[x].offsetHeight;
    	        if(thisHeight > tallestEle) {
    	            tallestEle = thisHeight;
    	        }    	    
    	    }    	 
    	    
    	    if(customHeight && tallestEle > customHeight) { tallestEle = customHeight; }
    	    if(customMargin == '0') { bottomMargin = '0px'; }
   	    
	    	for(var x = 0; x < rowItems.length; x++) {
	    		rowItems[x].style.height = tallestEle + "px";
	    		rowItems[x].style.marginBottom = bottomMargin;
	    	}    	  
    	}
    }, 
 

	scene7HasJS: function( element, navigation_elements ) {
		if($('.scene7-wrapper').length){
			$('.scene7-wrapper').addClass('scene7-js');
		}
		if($('.scene7-js .scene7-static').css('display') == 'block'){
			$('.scene7-js').css('height', '340px');
		}
	},
	
	/**
    * Enables showing and hiding of additional product details content
    * @function
    * @memberOf tesco.common
    */
    showMoreDetails: function(){
		if($('.offerTitle').length){
            $('.offerTitle').addClass('js-offers');
            $('.offerTitle ul').each(function(i, e){
                  if($(this).children().length > 3){
                        $(this).parent().find('.disabled-standard').css('display','block');
                        $(this).children('li:gt(2)').hide();
                        $(this).find('li p').hide();
                        $('.title-opened').hide();
                  }
            });
      }
      
      $('.offerTitle .disabled-standard').click(function(e){
            e.preventDefault();
            var me= $(this).children('img');
            var thisItem = $(this).parent('.offerTitle');
            var src = me.attr('src');
            var count = thisItem.data('count');
            if (count===undefined) {
                  count = 2;
            }

            if(thisItem.hasClass('expanded') === true){
                  thisItem.removeClass(TESCO.Common.EXPANDED_CLASS).children('ul').each(function(i, e) {
                        me.attr('src',src.replace('minus_grey.png','plus_grey.png'));
                        me.attr('alt','Show more');
                        $(e).children('li:gt(2)').hide({
                              duration: 200
                        }).end().find("li p").hide();
                  });
            } else{
                  thisItem.addClass(TESCO.Common.EXPANDED_CLASS).children('ul').each(function(i, e) {
                        me.attr('src',src.replace('plus_grey.png','minus_grey.png'));
                        me.attr('alt', 'Show less');
                        $(e).children('li:gt(2)').show({
                              duration: 200
                        }).end().find("li p").show();
                  });
            }
            //me.attr('src',src.replace(path, newImg));
      });
	},
		
    jumpToStockAlert: function () {
        var listingId = $("input#listingId").val();
        //var $anchorStock = $("div.product-list li.anchor-stock:first");
        var $anchorStock = $("div.product-list li#" + listingId);
        if ($anchorStock.length) {                
              var position = $anchorStock.offset().top;
              if (typeof jQuery !== 'undefined') {
                    $('html, body').animate({
                          scrollTop: position
                    }, 500);
              } else {
                    $(document).scrollTop( position );
              }                 

        }

    },
	
	
	/**
	    * Enables red glow on quantity box when invaild value is given on Product detail page
	    * @function
	    * @memberOf tesco.common
	*/
	showGlowErrs: function(){
		$('label.invalid').each(function(){
			//$('input[class=quantity-display]').addClass('invalid');
			$("#"+$(this).attr("for")).addClass('invalid');
		});
		
		
	},

	/**
    * Tabs Content for seller information page
    * @function
    * @memberOf tesco.common
    */
	tabContent: function(){
		if($('.tabs-container').length){
			$('#seller-tabs').tabs();
			$('.tabs-nav a').click(function(){
				$('.tabs-nav a').removeClass('active');
				$(this).addClass('active');
			});
		}
	},

	/**
    * Adds modal lightbox functionality to popups
    * @function
    * @memberOf tesco.common
    */
	modalDialogueBox: function(){
		
		var me = this;
		$( '.lightbox' ).click(function( evt ) {
			evt.preventDefault();
			me.lightbox( this, {
				'cancel_text' : 'Cancel',
				'loaded' : function( container ) {
					me.checkboxes( container );
					if($('.confirm-address-edit').length){
						$('.ui-dialog-buttonpane').addClass('cancel-edit');
					}
				}
			} );
		});
		
		$( '.imageLightbox' ).click(function( evt ) {
			evt.preventDefault();
			me.lightbox( this, {
				'imageLightbox' : true
			} );
		});

		$( 'p.service-charge a' ).click(function( evt ) {
			evt.preventDefault();
			me.lightbox( this, { 'hideclose' : true, 'cancel_text' : 'Close' } );
		});
		
		if ($("a.delivery-info-box").length) {
			$("a.delivery-info-box").on("click", function(evt){ 
				evt.preventDefault();
				me.lightbox(this); 
			});
	    }
	},

		
	/**
	 * Non modal version of lightbox. No overlay is produced and the user is
	 * still able to interact with the page. More like a pop up.
	 * @function
	 * @memberOf tesco.common
	*/
	nonModalDialogue: function () {
		// wrap the delivery cost text with an anchor. The anchor only works
		// as an event handler for the dialog, so it's generated dynamically
		$('p.delivery-cost').wrapInner('<a href="#charge-info" class="non-modal-lightbox"></a>');
		// local reference to the dynamic anchor element
		var link = $('.non-modal-lightbox'),
		// local reference this object
			me = this;

		// be default non modal anchors are hidden when javascript is turned off and
		// the modal content is hidden in a div with an id
		if(link.length){
			link.addClass('reveal');
			$('.dialog-content').addClass('hidden js');
		}

		// non modal anchors have the class of non-modal-lightbox
		$('.non-modal-lightbox').click(function (e) {
			// prevent default behaviour
			e.preventDefault();
			// create a lightbox instance
			$('#charge-info').dialog({
				width: 400,
				modal: true
			});
		});
	},

	checkboxes: function( container ) {

		var query = TESCO.ProductCompare.prototype.getQueryParameters;

		var checked_class = 'checked';
		$( container ).click(function( evt ) {
			evt.preventDefault();

			var element = evt.target;
			if (element && element.tagName.toLowerCase() == 'a') {
				var src = $(element).find('img').attr('src');
				if ($( element ).hasClass( checked_class )) {
					$( element ).removeClass( checked_class );
					$(element).find('img').attr('src',src.replace('sprt-left-nav-checked.jpg','sprt-left-nav-unchecked.jpg'));
				} else {
					$( element ).addClass( checked_class );
					$(element).find('img').attr('src',src.replace('sprt-left-nav-unchecked.jpg','sprt-left-nav-checked.jpg'));
				}
			}
			if (element && element.tagName.toLowerCase() == 'img') {
				var src = $(element).attr('src');
				if ($( element ).parent().parent().hasClass( checked_class )) {
					$( element ).parent().parent().removeClass( checked_class );
					$(element).attr('src',src.replace('sprt-left-nav-checked.jpg','sprt-left-nav-unchecked.jpg'));
				} else {
					$( element ).parent().parent().addClass( checked_class );
					$(element).attr('src',src.replace('sprt-left-nav-unchecked.jpg','sprt-left-nav-checked.jpg'));
				}
			}
		});

		$( container ).find( '.actions input' ).click(function( evt ) {
			var categories = [ ];

			var selected = $( container ).find( '.category-filter a[class=checked]' );
			var newOptions = [];
			var facetName = [];
			for (var i = 0, j = selected.length; i < j; i++) {
				newOptions.push(selected.eq(i).data('facet-option-id'));
				facetName.push(selected.eq(i).data('facet-option-value'));
			}
			var currentQs = $('#left-nav-qs').val();
			var catIdIndex = currentQs.indexOf('&', currentQs.indexOf('catId'));
			
		    var catIdBefore = currentQs.substring(0, catIdIndex);
		    var catIdAfter = currentQs.substring(catIdIndex);
		    
			if(newOptions.length){
				currentQs = catIdBefore + '+' + newOptions.join('+') + catIdAfter;
				window.location = $(this).closest('#brand-select').find('form').attr('action') + '?' + currentQs + '&lastFilter=' + selected.eq(0).data('facet-option-name') +'|'+ facetName[facetName.length-1];
			}
			else{
				$('.ui-dialog-buttonset').find('button:contains("Cancel")').click();
			}
			return false;
		});
	},

	lightbox: function( element, options ) {

		var lightbox_url = '';
		if ($(element).data('href')) {
			lightbox_url = $(element).data('href');
		} else {
			lightbox_url = element.nodeType ? $( element ).attr( 'href' ) : element;
		}
		
		options = options || { };

		$.get(lightbox_url, function( response ) {
			var dialog_options = {
				modal: true,
				width: 610,
				open: function( event, ui ) {
					

					if (options.hideclose) {
						$(".ui-dialog-titlebar-close").hide();
					}

					if (options.loaded) {
						options.loaded( this );
					}
				},
				close: function(event, ui){
					$( this ).dialog( 'destroy' );
					$( this ).remove();
				},
				zIndex: 9999
			};

			if (options.cancel_text) {
				dialog_options.buttons = [ {
					text: options.cancel_text,
					click: function() {
						$( this ).dialog( 'close' );
					}
				} ];
			}
			
			if (options.imageLightbox) {
				dialog_options.width = '350'
			}
			
			$(response).dialog( dialog_options );
			
			$('.ui-dialog-buttonset').find('button:contains("' + options.cancel_text + '")').addClass('button disabled-standard');
			
			if (options.imageLightbox) {
				$('.ui-dialog').addClass('imageLightbox');
			}
		});

	},

	offerTooltip: function(){		
		$('div.product-availability-offers ul.special-offers a.view-list').each(function(i, e) {
			$(e).tooltip({
                autohide: true,
                delay: 500,
                tooltip: $(this).closest('div.product-availability-offers').children('div.offers').eq(0)
            });
        });
	},
	
    pricepromiseTooltip: function(){
		$('div.section div.price-promo .price-promo-help span').each(function(i, e) {
			$(e).tooltip({
				autohide: true,				
				delay: 500,
				tooltip: $(this).closest('div.section').children('.sampleTip').eq(0)
			});
		});
	},    
	regiserForAlertsTooltip: function(){
		$('.buy-box-stock-alerts input.register-for-alerts').each(function(i, e) {
			$(e).tooltip({
				autohide: false,
				initiate: 'click',
				tooltip: $(this).closest('.buy-box-stock-alerts').children('.tooltip-register-for-alerts').eq(0),
				onInitialise: function(api){
					api.tooltip.find('.input-standard').click(function(){
						api.tooltip.hide();
						return false;
					});
					api.tooltip.find('.disabled-standard').click(function(){
						api.tooltip.hide();
						return false;
					});					
					api.tooltip.find('.clear-button').click(function(){
						api.trigger.unbind().click();
						return false;
					});
				}
			});
		});
	},

	    
	confirmCardDeleteTooltip: function(){
		$('.payment-cards input.delete-card').each(function(i, e) {
			$(e).tooltip({
				autohide: false,
				initiate: 'click',
				tooltip: $(this).closest('.payment-cards li').children('.tooltip-card-delete').eq(0),
				onInitialise: function(api){
					api.tooltip.find('.cancel-button').click(function(){
						api.tooltip.hide();
						return false;
					});
					api.tooltip.find('.confirm-button').click(function(){
						api.trigger.unbind().click();
						return false;
					});
				}
			});
		});
	},
	
	
    /**
     * Clears the search results table and removes marker overlays from the mapviewer
     * @function
     * @memberOf tesco.common
     */
    clearSearchResults: function() {

        this.setStorefinderErrorState( false );
        if (this.mapviewer) {
            this.mapviewer.removeAllOverlays();
            if (this.storefinder_resultstable.rows) {
                while (this.storefinder_resultstable.rows.length) {
                    this.storefinder_resultstable.deleteRow( 0 );
                }

                this.setStoreResultsState( false );
            }

            this.markers = [ ];
        }

    },


   
    /**
     * Expands and collapses elements
     * @function
     * @memberOf tesco.common
     */
	productFilterToggle: function() {
		var el = $("#product-filter h4 a");
		$(el).click(function(element) {
			var elementName=$(this).text();
			element.preventDefault();
			$(this).parents('h4').toggleClass('closed');
			 if ($(this).parents('h4').hasClass('closed')) {
                 s.linkTrackVars='eVar70,events'; 
                 s.linkTrackEvents=s.events='event10,event75'; 
                 s.eVar70 = elementName; 
                 s.tl(this, 'o', 'Nav Link Click');
             } 
			//$(this).parents('h4').next('ul').toggleClass('closed', 350);
			$(this).parents('h4').next('ul').slideToggle('fast');
		});
		
		var e2 = $("#homepage-popular-searches a").not("ul#popular-searches-list li a");
		$(e2).attr('onclick','');
		$(e2).click(function(element) {
					var eleId=$(this).attr('id');
					eleId = eleId.split("-");
					s.linkTrackVars='prop35,events';
					s.linkTrackEvents=s.events='event13';
					s.prop35=eleId[0];
		            s.tl(this, 'o', 'Nav Link Click');
		});

	},   
		    
    
    /**
     * @function
     * @memberOf tesco.common
     */
    accessibilityOptions: function() {

    	var accessibilityOptChange = function(el) {
    		if ($(el).is(':checked')) {
        		$(el).closest('.radio-field').addClass('active');
        		$(el).closest('.radio-field').siblings().removeClass('active');
        	}
    	}
    	
    	$('#accessibility-opt .radio-field').click(function(){
    		$(this).find('input').attr('checked', 'checked');
    		accessibilityOptChange($(this).find('input').eq(0));
    	});
    	
    	$('#accessibility-opt .radio-field').hover(
    		function(){
    			$(this).css('cursor', 'pointer');
    		},
    		function(){
    			$(this).css('cursor', 'default');	
    		}
    	);
    	
        $('#accessibility-opt .radio-input').change(function(){
        	accessibilityOptChange(this);
        });

        if ($('#accessibility-opt').length) {
        	accessibilityOptChange($('#accessibility-opt input:checked').eq(0));
        }
    },

    /**
     * Limiting the number of characters and counting characters remaining
     * @function
     * @memberOf tesco.common
     */
		characterLimiter: function(){

			var limit = parseInt($('textarea').attr('maxlength'), 10);

			$('<span class="char-limit">  </span>').insertAfter('textarea');

			$('.char-limit').html(limit + ' characters left');

			$('textarea[maxlength]').bind('keypress, keyup', function(e){
				var text = $(this).val(),
					chars = text.length,
					charCount = limit - chars,
					keyPress = e.keyCode;

				$(this).siblings('.char-limit').html(charCount + ' characters left');

				if(chars >= limit){
					// allows user to delete and navigate but not add characters
					if(!(keyPress === 8 || keyPress === 46 || keyPress === 37 || keyPress === 38 || keyPress === 39 || keyPress === 40)) {
						e.preventDefault();
					}
				}
			});
		},

		/**
		 *	 Initilises placeholder text for the search bar underneath the
		 *	 primary nav for browsers that do not support it.
		 *	@function
		 *	@memberOf tesco.common
		 */

		placeHolder: function () {
			if(typeof document.createElement("input").placeholder == 'undefined') {
				// local reference to the element
				var placeholderEl = $('[placeholder]');
				$(placeholderEl).each(function(){
					$(this).focus(function() {
						// re-localised for the function's scope
						var input = $(this);
						if (input.val() === input.attr('placeholder')) {
							input.val('');
							input.removeClass('placeholder');
						}
					}).blur(function() {
						var input = $(this);
						if (input.val() === '' || input.val() === input.attr('placeholder')) {
							input.addClass('placeholder');
							input.val(input.attr('placeholder'));
						}
						
					});
					
					var input = $(this);
					if (input.val() === '' || input.val() === input.attr('placeholder')) {
						input.addClass('placeholder');
						input.val(input.attr('placeholder'));
					}
					
				});
				
				// prevents the values of the placeholder from attaching themselves
				// to the form action script
				$(placeholderEl).parents('form').submit(function() {
					$(this).find('[placeholder]').each(function() {
					var input = $(this);
						if (input.val() === input.attr('placeholder')) {
							input.val('');
						}
					});
				});
			 }
		},
		

		
	hideSearchFacets: function() {
		// function make search facets on PLP collapsed by default if they have a class of "sizeFacetGroupClass"	
		var $elemCache = $('#product-filter'); 
		if($elemCache.length) {
			$elemCache.children('h4 a').each(function(e, i) {				 
				if ($eC.hasClass('sizeFacetGroupClass')) {
					$eC.click();				
				}	
			});		
		}
	},
	
    1: 1

});


TESCO.extend( 'Carousel', {
    init: function() {
		if($('.grid-3 .carousel').length){
            $('.grid-3 .carousel').carousel({visible: 3, scroll: 3});
        }
        if($('.grid-4 .carousel').length){
            $('.grid-4 .carousel').carousel({visible: 4, scroll: 4});
        }
		if($('.grid-5 .carousel').length){
            $('.grid-5 .carousel').carousel({visible: 5, scroll: 5});
        }
		TESCO.Common.setCarouselView();
		TESCO.Common.setProductTileView();
		TESCO.Common.setProductBlockView();
	}
});


TESCO.extend('Kiosk', {
	init: function() {
		document.documentElement.className+=" isKiosk";	
		this.bindTopNavBehaviour();
	},
	bindTopNavBehaviour: function() {
		$('#navigation').delegate('ul > li > a', 'click', function(e) {
			if (!$(this).parent().parent().hasClass('navigation-level-3')) {
				e.preventDefault();			
				TESCO.Kiosk.clearExpandedStates()
				$(this).parent().trigger('mouseover');			
				return false;
			}
		});			
	},
	clearExpandedStates: function() {
		$('#navigation li.expanded').trigger('mouseleave');
	}
});


$(document).ready(function() {		
    TESCO.Common.init();
    TESCO.Carousel.init();
    if (window.BAZAAR) {
		BAZAAR.init();
	}
   
	// iSiteId is generated by backend, variable declared in header.jsp 
	if (iSiteId === 1) {
		TESCO.Kiosk.init();
	}
});

function checkSpclInstruction(selection){
	  var slctVal = document.getElementById("delInstructions"+selection);
	  var divObj = document.getElementById("delSpclInstructionDiv"+selection);
	  if(slctVal && slctVal.value == "Leave with Neighbour"){
		  divObj.style.display="block";
	  }
	  else {
		  divObj.style.display="none";
	  }
}

/***
 * End 
*/


TESCO.Common.Data = {	    
	    /*** 
	    *   From the oElem (DOM element which triggered data), we can determine which module has been triggered and which, if applicable, delivery group.
	    **/
	    handler: function(oJSON, oElem) {
	        // Based on JSON response, we need to look up each element in object, relate it to the module and then lookup the module for the DOM element                
	        $.each(oJSON, function(k, v) {
	            if (k === 'analytics') {
	                var _oWebAnalytics = new TESCO.Analytics.WebMetrics();
	                _oWebAnalytics.submit(v);
	            }
	            else if(k === 'redirection'){
	                  location.href = v;
	            }
	            else {
	                // Get the module DOM element
	                if (TESCO.Common.Data.isCustomModule(k)) {
	                    var _myModuleSelector = '#' + k;
	                }
	                else if (TESCO.Common.Data.isCustomModuleClass(k)) {
	                    var _myModuleSelector = '.' + k;
	                }
	                else {
	                    // Get Module information, dom element, message and if it is a global element
	    				var _myModuleInfo = TESCO.Utils.getModuleInformation(k);
	    				var _myModuleSelector = _myModuleInfo[0];
	                    if (_myModuleInfo[2] == false) {
	                        // Get the module within the delivery group if we are not updating all the delivery groups
	                        _myModuleSelector = TESCO.Utils.getDeliveryGroup(oElem).find(_myModuleSelector);
	                    }
	                }
	                // Update DOM with markup returned
	                var _markup = TESCO.Common.Data.cleanMarkup(v);
	                //$(_myModuleSelector).html(_markup);
	                try {
	                    // Do not allow no html to be inserted
	                    if (_markup != '' && !TESCO.Common.Data.isCustomModuleClass(k)) {
	                        $(_myModuleSelector).get(0).innerHTML = _markup;
	                    }
	                    else if(_markup != '' && TESCO.Common.Data.isCustomModuleClass(k)){
	                    	$(_myModuleSelector).html(_markup);
	                    }
	                    else{}
	                }
	                catch(e) {
	                    
	                }
	            }         
	        });
	    },
	    cleanMarkup: function(sHTML) {              
	        if (sHTML != null) {
	            return sHTML.replace(/<(script|style|title)[^<]+<\/(script|style|title)>/gm, '').replace(/<(link|meta)[^>]+>/g,'');
	        }
	        else {
	            return '';
	        }
	    },
	    isCustomModule: function(sModule) {
	        // If module contains "dg-", we know the backend is targeting a specific delivery group
	        return sModule.match(/id-/g) ? true : false
	    },
	    isCustomModuleClass: function(sModule) {
	        // If module contains "dg-", we know the backend is targeting a specific delivery group
	        return sModule.match(/cl-/g) ? true : false
	    }
	};


