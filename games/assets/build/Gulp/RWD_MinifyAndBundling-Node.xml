<project default="all" basedir="C:/ATG/ATG9.4/Tesco/application/tescodotcom/j2ee-apps/commerce.ear/commerce.war/assets">

	<property name="jar.assets" value="C:\ATG\ATG9.4\Tesco\UI-Asset-Minification"/>
	
	<!-- Settings for CSS -->  
	<property name="css.src-dir" value="${basedir}/css"/>
	<property name="css.legacy-src-dir" value="${css.src-dir}/css-source"/>
	<property name="css.files" value="base.css,all-styles-common.css,all-styles-desktop.css,all-styles-kiosk.css,all-styles-large-desktop.css,all-styles-mobile.css,all-styles-tablet.css"/>
	<property name="css-non-rwd.files" value="base.css,all-styles-common.css,all-styles-desktop.css"/>
	<property name="css-legacy.files" value="legacy.css"/>
	<property name="scss.src-dir" value="${basedir}/css"/>
	
	<property name="node-sass-module" value="E:\buildkit\Grunt\node_modules\node-sass\bin\node-sass"/>
		
			
	<!-- Settings for JS -->
	<property name="js.src-dir" value="${basedir}/js"/>
	<property name="js.lib-dir" value="${basedir}/js/lib"/>
	<property name="js.mod-dir" value="${basedir}/js/modules"/>
	<property name="js.legacy-dir" value="${basedir}/js/legacy"/>
	<property name="js.built-dir" value="${basedir}/js/built"/>
	
	<property name="js.require-main" value="${js.src-dir}/main.js"/>
	
	<property name="js.lib.files" value="modernizr.js,jquery-1.9.0.min.js,jquery-ui-1.9.2.easing.min.js,ios-orientation-fix.js,hammer.js,hammer.jquery.js,fast-click.js,html5placeholder.jquery.js,picturefill.js,jquery.dotdotdot-1.5.6-packed.js,jquery.validate.js,jquery.validate.methods.js"/>
	<property name="js.mod.files" value="common.js,header.js,carousel.js,footer.js,visual-nav.js,navigation.js,viewport.js,main-nav.js,basket-preview.js,add-to-basket.js,product-filters.js,product-sort-by.js,breadcrumb.js,tile-carousel.js,recently-viewed.js,product-tile.js,add-to-compare.js,sort-by.js,colour-swatch.js,load-more.js,signin-register.js,buy-from.js,grid.js,expand-collapse.js,read-more.js,basket-attach.js"/>	
	
	<property name="js.core.files" value="tesco-rwd.js"/>
	<property name="js.core.lib.files" value="jquery-1.9.0.min.js,jquery-ui-1.9.2.easing.min.js,html5placeholder.jquery.js,picturefill.js,jquery.dotdotdot-1.5.6-packed.js,jquery.validate.js,jquery.validate.methods.js"/>
	<property name="js.core.mod.files" value="common.js,header.js,carousel.js,footer.js,visual-nav.js,navigation.js,viewport.js,main-nav.js,basket-preview.js,add-to-basket.js,product-filters.js,product-sort-by.js,breadcrumb.js,tile-carousel.js,recently-viewed.js,product-tile.js,add-to-compare.js,sort-by.js,colour-swatch.js,load-more.js,signin-register.js,buy-from.js,grid.js,expand-collapse.js,read-more.js,basket-attach.js"/>
	<property name="js.mobile.lib.files" value=""/>
	<property name="js.desktop.lib.files" value="modernizr.js"/>
	
	<property name="js.legacy.files" value="jquery-ui-legacy.js,tesco.legacy.common.js,tesco.legacy.extensions.js,tesco.legacy.authentication.js,tesco.legacy.wishlist.js"/>
	
	<property name="js.mobile.mod.files" value=""/>
	<property name="js.desktop.mod.files" value=""/>	
			
	<!-- Library declarations -->
	<property name="yuicompressor-jar" value="${jar.assets}/yuicompressor-2.4.6.jar"/>		
		
	<target name="all" depends="requireoptimiser,rwdcss,rwdjavascript"/>
			
	<target name="requireoptimiser">
		<echo>Processing Require Optimiser</echo>
		
		<!--<echo>Processing Desktop JS</echo>
		<exec dir="${jar.assets}" executable="cmd">
		   <arg value="/c"/>
		   <arg value="node require/r.js -o build-desktop.json name=require/almond baseUrl=${js.src-dir} out=${js.built-dir}/desktop.js insertRequire=main"/>
		</exec>
		
		<exec dir="${jar.assets}" executable="cmd">
		   <arg value="/c"/>
			<arg value="node require/r.js -o build-desktop.json name=require/almond baseUrl=${js.src-dir} out=${js.built-dir}/desktop-concat.js optimize=none insertRequire=main"/>
		</exec>		
		
		<echo>Processing Kiosk JS</echo>
		<exec dir="${jar.assets}" executable="cmd">
		   <arg value="/c"/>
		   <arg value="node require/r.js -o build-kiosk.json name=require/almond baseUrl=${js.src-dir} out=${js.built-dir}/desktop.js insertRequire=main"/>
		</exec>	
		
		<exec dir="${jar.assets}" executable="cmd">
	   		<arg value="/c"/>
			<arg value="node require/r.js -o build-kiosk.json name=require/almond baseUrl=${js.src-dir} out=${js.built-dir}/kiosk-concat.js optimize=none insertRequire=main"/>
		</exec>
			
		<echo>Processing Touch/Mobile JS</echo>
		<exec dir="${jar.assets}" executable="cmd">
		   	<arg value="/c"/>		   	
			<arg value="node require/r.js -o build-touch.json name=require/almond baseUrl=${js.src-dir} out=${js.built-dir}/touch.js insertRequire=main"/>
		</exec>
		
		<exec dir="${jar.assets}" executable="cmd">
		   	<arg value="/c"/>		   	
			<arg value="node require/r.js -o build-touch.json name=require/almond baseUrl=${js.src-dir} out=${js.built-dir}/touch-concat.js optimize=none insertRequire=main"/>
		</exec>	-->
		
		<echo>Processing All JS</echo>		
		<exec dir="${jar.assets}" executable="cmd">
		   	<arg value="/c"/>
			<arg value="node require/r.js -o build.json name=require/almond baseUrl=${js.src-dir} out=${js.built-dir}/main-built.js insertRequire=main"/>
		</exec>	
		
		<exec dir="${jar.assets}" executable="cmd">
		   	<arg value="/c"/>
			<arg value="node require/r.js -o build.json name=require/almond baseUrl=${js.src-dir} out=${js.built-dir}/main-concat.js insertRequire=main optimize=none"/>
		</exec>
		
	</target>
	
	
	<target name="rwdcss">
			<echo>Processing RWD SCSS files</echo>
					
			<echo>Removing Existing breakpoints mixin</echo>			
			<!-- Set the modified breakpoints mixin when build the non-RWD version of the CSS -->
			<copy file="${css.src-dir}/common/breakpoints-non-rwd.base" tofile="${css.src-dir}/common/breakpoints.scss" overwrite="true" />

			<!-- Remove existing grid.scss --> 
			<echo>Removing Existing grid mixin</echo>
			
			<!-- Set the default breakpoints mixin when build the RWD version of the CSS -->
			<copy file="${css.src-dir}/common/grid-non-rwd.base" tofile="${css.src-dir}/common/grid.scss" overwrite="true"/>

			<echo>Processing Non-RWD SCSS files</echo>
			
			<exec dir="${jar.assets}" executable="cmd">
				<arg value="/c"/>
				<arg value="node ${node-sass-module} ${css.src-dir}/base.scss ${css.src-dir}/base.css"/>
			</exec>
			
			<exec dir="${jar.assets}" executable="cmd">
				<arg value="/c"/>
				<arg value="node ${node-sass-module} ${css.src-dir}/all-styles-common.scss ${css.src-dir}/all-styles-common.css"/>
			</exec>
			
			<exec dir="${jar.assets}" executable="cmd">
				<arg value="/c"/>
				<arg value="node ${node-sass-module} ${css.src-dir}/all-styles-desktop.scss ${css.src-dir}/all-styles-desktop.css"/>
			</exec>
			
			<exec dir="${jar.assets}" executable="cmd">
				<arg value="/c"/>
				<arg value="node ${node-sass-module} ${css.legacy-src-dir}/legacy.scss ${css.legacy-src-dir}/legacy.css"/>
			</exec>
			
			<echo>Minifying Legacy CSS file</echo>
			
			<exec dir="${jar.assets}" executable="cmd">
				<arg value="/c"/>
				<arg value="node require/r.js -o cssIn=${css.legacy-src-dir}/legacy.css out=${css.src-dir}/legacy-min.css"/>
			</exec>
		
			<echo>Concatenating Non-RWD CSS file</echo>
			<!-- Concat CSS Files -->
			<concat destfile="${css.src-dir}/concat-non-rwd.css" encoding="UTF-8">
				<filelist dir="${scss.src-dir}">
		        	<file name="base.css"/>
					<file name="all-styles-common.css"/>
					<file name="all-styles-desktop.css"/>
		      	</filelist>				
				<filelist dir="${css.legacy-src-dir}" files="${css-legacy.files}"/>			
			</concat>
			
			<echo>Minifying Non-RWD CSS file</echo>
			
			
			<exec dir="${jar.assets}" executable="cmd">
				<arg value="/c"/>
				<arg value="node require/r.js -o cssIn=${css.src-dir}/concat-non-rwd.css out=${css.src-dir}/css-min-non-rwd.css"/>
			</exec>
			
			
		
			<!--
			<echo>Removing Temp Non-RWD CSS file</echo>		
			<delete>
				<fileset dir="${css.src-dir}">
					<include name="concat-non-rwd.css"/>
				</fileset>
			</delete>		
			-->
		
			<!-- Set the default breakpoints mixin when build the RWD version of the CSS -->
			<copy file="${css.src-dir}/common/grid.base" tofile="${css.src-dir}/common/grid.scss" overwrite="true"/>
			
			<!-- Set the default breakpoints mixin when build the RWD version of the CSS -->
			<copy file="${css.src-dir}/common/breakpoints.base" tofile="${css.src-dir}/common/breakpoints.scss" overwrite="true"/>
			
			<exec dir="${jar.assets}" executable="cmd">
				<arg value="/c"/>
				<arg value="node ${node-sass-module} ${scss.src-dir}/base.scss ${scss.src-dir}/base.css"/>
			</exec>
			
			<exec dir="${jar.assets}" executable="cmd">
				<arg value="/c"/>
				<arg value="node ${node-sass-module} ${scss.src-dir}/all-styles-common.scss ${scss.src-dir}/all-styles-common.css"/>
			</exec>
			
			<exec dir="${jar.assets}" executable="cmd">
				<arg value="/c"/>
				<arg value="node ${node-sass-module} ${scss.src-dir}/all-styles-desktop.scss ${scss.src-dir}/all-styles-desktop.css"/>
			</exec>
			
			<exec dir="${jar.assets}" executable="cmd">
				<arg value="/c"/>
				<arg value="node ${node-sass-module} ${scss.src-dir}/all-styles-kiosk.scss ${scss.src-dir}/all-styles-kiosk.css"/>
			</exec>
			
			<exec dir="${jar.assets}" executable="cmd">
				<arg value="/c"/>
				<arg value="node ${node-sass-module} ${scss.src-dir}/all-styles-desktop.scss ${scss.src-dir}/all-styles-desktop.css"/>
			</exec>
			
			<exec dir="${jar.assets}" executable="cmd">
				<arg value="/c"/>
				<arg value="node ${node-sass-module} ${scss.src-dir}/all-styles-large-desktop.scss ${scss.src-dir}/all-styles-large-desktop.css"/>
			</exec>
			
			<exec dir="${jar.assets}" executable="cmd">
				<arg value="/c"/>
				<arg value="node ${node-sass-module} ${scss.src-dir}/all-styles-tablet.scss ${scss.src-dir}/all-styles-tablet.css"/>
			</exec>
			
			<exec dir="${jar.assets}" executable="cmd">
				<arg value="/c"/>
				<arg value="node ${node-sass-module} ${scss.src-dir}/all-styles-mobile.scss ${scss.src-dir}/all-styles-mobile.css"/>
			</exec>
			
		
			<exec dir="${jar.assets}" executable="cmd">
				<arg value="/c"/>
				<arg value="node ${node-sass-module} ${scss.src-dir}/ie8.scss ${scss.src-dir}/ie8-rwd.css"/>
			</exec>
			
			<exec dir="${jar.assets}" executable="cmd">
				<arg value="/c"/>
				<arg value="node ${node-sass-module} ${scss.src-dir}/ie9.scss ${scss.src-dir}/ie9-rwd.css"/>
			</exec>
		
			<exec dir="${jar.assets}" executable="cmd">
				<arg value="/c"/>
				<arg value="node ${node-sass-module} ${scss.src-dir}/all-ie-styles.scss ${scss.src-dir}/all-ie-styles.css"/>
			</exec>
			
					
			<!-- RWD base and all-styles-common Concat -->
			<concat destfile="${css.src-dir}/core-concat-rwd.css" encoding="UTF-8">				
				<filelist dir="${scss.src-dir}">
			        <file name="base.css"/>
					<file name="all-styles-common.css"/>
			      </filelist>
			</concat>		
		
		
			<echo>Minifying RWD CSS file</echo>
			
			
			<exec dir="${jar.assets}" executable="cmd">
				<arg value="/c"/>
				<arg value="node require/r.js -o cssIn=${css.src-dir}/core-concat-rwd.css out=${css.src-dir}/core-rwd-min.css"/>
			</exec>
		
			<echo>Concatenating RWD CSS files - Desktop</echo>	
			<!-- RWD base, all-styles-common & all-style-desktop Concat -->
			<concat destfile="${css.src-dir}/core-desktop-concat-rwd.css" encoding="UTF-8">				
				<filelist dir="${scss.src-dir}">
			        <file name="base.css"/>
					<file name="all-styles-common.css"/>
					<file name="all-styles-desktop.css"/>
			      </filelist>
			</concat>		
				
			<echo>Minifying RWD CSS files - Desktop</echo>
			
			<exec dir="${jar.assets}" executable="cmd">
				<arg value="/c"/>
				<arg value="node require/r.js -o cssIn=${css.src-dir}/core-desktop-concat-rwd.css out=${css.src-dir}/core-desktop-rwd-min.css"/>
			</exec>
			
			<exec dir="${jar.assets}" executable="cmd">
				<arg value="/c"/>
				<arg value="node require/r.js -o cssIn=${css.src-dir}/base.css out=${css.src-dir}/base-min.css"/>
			</exec>
			
			<exec dir="${jar.assets}" executable="cmd">
				<arg value="/c"/>
				<arg value="node require/r.js -o cssIn=${css.src-dir}/all-styles-common.css out=${css.src-dir}/all-styles-common-min.css"/>
			</exec>
			
			<exec dir="${jar.assets}" executable="cmd">
				<arg value="/c"/>
				<arg value="node require/r.js -o cssIn=${css.src-dir}/all-styles-mobile.css out=${css.src-dir}/all-styles-mobile-min.css"/>
			</exec>
			
			<exec dir="${jar.assets}" executable="cmd">
				<arg value="/c"/>
				<arg value="node require/r.js -o cssIn=${css.src-dir}/all-styles-tablet.css out=${css.src-dir}/all-styles-tablet-min.css"/>
			</exec>
			
			<exec dir="${jar.assets}" executable="cmd">
				<arg value="/c"/>
				<arg value="node require/r.js -o cssIn=${css.src-dir}/all-styles-desktop.css out=${css.src-dir}/all-styles-desktop-min.css"/>
			</exec>
			
			<exec dir="${jar.assets}" executable="cmd">
				<arg value="/c"/>
				<arg value="node require/r.js -o cssIn=${css.src-dir}/all-styles-large-desktop.css out=${css.src-dir}/all-styles-large-desktop-min.css"/>
			</exec>
			
			<exec dir="${jar.assets}" executable="cmd">
				<arg value="/c"/>
				<arg value="node require/r.js -o cssIn=${css.src-dir}/all-styles-kiosk.css out=${css.src-dir}/all-styles-kiosk-min.css"/>
			</exec>
			
			<exec dir="${jar.assets}" executable="cmd">
				<arg value="/c"/>
				<arg value="node require/r.js -o cssIn=${css.src-dir}/all-ie-styles.css out=${css.src-dir}/all-ie-styles-min.css"/>
			</exec>
			
			<echo>Removing Existing breakpoints mixin</echo>		
			<!-- Put original brakepoint.scss back -->
			<copy file="${css.src-dir}/common/breakpoints.base" tofile="${css.src-dir}/common/breakpoints.scss" overwrite="true"/>
	
			<!-- Clean up Concat files -->
			<!--
			<delete>
				<fileset dir="${css.src-dir}">
					<include name="core-concat-rwd.css"/>
				</fileset>
			</delete>		
			-->
		</target>	
		
		<!-- Concat and minimize JS -->
		<target name="rwdjavascript">
			<echo>Processing Javascript</echo>
		
			<!-- Legacy JS File Concat -->
			<concat destfile="${js.src-dir}/legacy-concat.js" encoding="UTF-8">
				<filelist dir="${js.legacy-dir}" files="${js.legacy.files}"/>
			</concat>
						
			<!-- Minimize Legacy JS -->
			<java jar="${yuicompressor-jar}" fork="true">
				<arg line="--charset UTF-8"/>
				<arg line="--preserve-semi"/>
				<arg line="-o ${js.src-dir}/legacy-rwd-min.js"/>
				<arg line="${js.src-dir}/legacy-concat.js"/>
			</java>
			
			<!-- TODO: Add Require Optimizer -->
			
			<!-- Remove old file-->
			<!--
			<delete>
				<fileset dir="${js.src-dir}">
					<include name="legacy-concat.js"/>
				</fileset>
			</delete>
			-->
			
		</target>
		
	</project>